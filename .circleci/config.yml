version: 2.1
commands:
  # Exercise - Rollback
  destroy_infrastructure:
    description: "delete cloudformation stack previously created"
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  # aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
jobs:
# myjob1:  # Choose any name, such as `build`
#   # The primary container, where your job's commands will run
#   docker:
#     - image: 
#   steps:
#     - checkout # check out the code in the project directory
#     - run: echo "hello world" # run the `echo` command
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
  # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["59:a3:d5:d5:96:0e:11:21:e0:95:f5:8e:a1:b9:cf:7e"] 
      - run:
          name: Install Ansible
          command: |
            # Install Ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            apk add --update ansible
      - run:
          name: Configure Server
          command: |
            ansible-playbook -i inventory main.yml
  smoke_test:
    docker: 
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: return 1
      - destroy_environment
#          |
#            URL="https://blog.udacity.com/"
#            # Test if Website exists
#            if curl -s --head ${URL} 
#            then
#              return 0
#            else
#              return 1
#            fi
# Sequential workflow
workflows:
  # Name the workflow
  my_workflow:
    jobs:
#     - create_infrastructure
#     - onfigure_infrastructure:
    - smoke_test